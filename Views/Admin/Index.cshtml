@using GearRent.PaginatedList;
@model PaginatedList<GearRent.Models.Reservation>
@{
    Layout = "~/Views/Admin/_AdminLayout.cshtml";

    ViewBag.Title = "Profile";
    ViewBag.ControllerName = "Admin";
    ViewBag.ActionName = "Index";


}
@{
    var reservationStatusValues = Enum.GetValues(typeof(ReservationStatus)).Cast<ReservationStatus>();
}


<h2>Upcoming Bookings</h2>

<form method="get" class="mb-4">
    <div class="row">
        <div class="col-md-4 mb-3">
            <label for="daysAhead" class="form-label">Reservations up to:</label>
            <select id="daysAhead" name="daysAhead" class="form-select">
                <option value="7">7 days</option>
                <option value="14">14 days</option>
                <option value="30">30 days</option>
            </select>
        </div>
        <div class="col-md-3 mb-3">
            <label for="pageSize" class="form-label">Page size:</label>
            <select id="pageSize" name="pageSize" class="form-select">
                <option value="3">3</option>
                <option value="5">5</option>
                <option value="10">10</option>
            </select>
        </div>
        <div class="col-md-4 mb-3">
            <label class="form-label">Statuses:</label>
            <div class="dropdown">
                <button class="btn btn-secondary dropdown-toggle" type="button" id="statusDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                    Select Status
                </button>
                <ul class="dropdown-menu" aria-labelledby="statusDropdown">
                    @foreach (var status in reservationStatusValues)
                    {
                        <li>
                            <div class="form-check">
                                <input type="checkbox" name="show@(status)" value="true" class="form-check-input" id="show@(status)">
                                <label class="form-check-label" for="show@(status)">@status</label>
                            </div>
                        </li>
                    }
                </ul>
            </div>
        </div>
        <div class="col-md-1 align-items-center d-flex justify-content-center">
            <button type="submit" class="btn btn-primary">Show</button>
        </div>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>Reservation ID</th>
            <th>Car</th>
            <th>Start Date</th>
            <th>End Date</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var reservation in Model)
        {
            <tr>
                <td>@reservation.Id</td>
                <td>@reservation.Car.Make @reservation.Car.Model</td>
                <td>@reservation.StartDate.ToShortDateString()</td>
                <td>@reservation.EndDate.ToShortDateString()</td>
                <td>
                    <button class="cancel-link" data-reservation-id="@reservation.Id">
                        <i class="fa fa-trash"></i>
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
<div class="d-flex justify-content-between">
    <nav>
        <ul class="pagination">
            @if (Model.HasPreviousPage)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { pageNumber = Model.PageIndex - 1 })">Previous</a>
                </li>
            }
            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                if (i == Model.PageIndex)
                {
                    <li class="page-item active">
                        <span class="page-link">@i</span>
                    </li>
                }
                else
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { pageNumber = i })">@i</a>
                    </li>
                }
            }
            @if (Model.HasNextPage)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { pageNumber = Model.PageIndex + 1 })">Next</a>
                </li>
            }
        </ul>
    </nav>
    <div>
        <a href="@Url.Action("AddCar")" class="btn btn-primary">Add Car</a>
    </div>
</div>
<script>
    document.addEventListener("click", function (event) {
        if (event.target.classList.contains("cancel-link")) {
            event.preventDefault();
            const reservationId = event.target.getAttribute("data-reservation-id");
            confirmDelete(reservationId);
        }
    });

    function confirmDelete(reservationId) {
        if (confirm('Are you sure you want to cancel this reservation?')) {
            deleteReservation(reservationId);
        }
    }

    function deleteReservation(reservationId) {
        $.ajax({
            url: '@Url.Action("CanceledStatus", "Reservations")',
            type: 'Put',
            data: { id: reservationId },
            success: function () {
                location.reload();
            },
            error: function (xhr, status, error) {
                console.error(error);
                alert('An error occurred while canceling the reservation.');
            }
        });
    }
</script>
