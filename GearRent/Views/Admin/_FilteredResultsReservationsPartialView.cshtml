@using GearRent.PaginatedList;
@model PaginatedList<GearRent.Models.Reservation>
@{
}
@foreach (var reservation in Model)
{
    <tr tr class="@(reservation.Status == ReservationStatus.InProgress ? "table-success" : "") @(reservation.Status == ReservationStatus.Canceled ? "table-danger" : "") @(reservation.Status == ReservationStatus.Unpaid ? "table-warning" : "") @(reservation.Status == ReservationStatus.Approved ? "table-primary" : "") @(reservation.Status == ReservationStatus.Finished ? "table-secondary" : "")">
        <td>@reservation.Id</td>
        <td>@reservation.Car.Make @reservation.Car.Model</td>
        <td>@reservation.StartDate.ToShortDateString()</td>
        <td>@reservation.EndDate.ToShortDateString()</td>
        <td>
            @if (reservation.Status == ReservationStatus.Approved || reservation.Status == ReservationStatus.Unpaid)
            {
                <button class="cancel-link" data-reservation-id="@reservation.Id">
                    <i class="fa fa-trash"></i>
                </button>
            }

            @if (reservation.Status == ReservationStatus.Approved && DateTime.Now.Date == reservation.StartDate.Date)
            {
                <button class="start-link" id="startBtn" data-reservation-id="@reservation.Id">
                    <i class="fa fa-play"></i>
                </button>
            }
            else if (reservation.Status == ReservationStatus.InProgress)
            {
                <button class="start-link">
                    <i class="fa fa-stop" id="finishBtn" data-reservation-id="@reservation.Id"></i>
                </button>
            }

        </td>
    </tr>
}